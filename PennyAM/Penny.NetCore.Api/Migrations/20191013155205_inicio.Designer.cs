// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Penny.NetCore.Api.Context;

namespace Penny.NetCore.Api.Migrations
{
    [DbContext(typeof(PennyContext))]
    [Migration("20191013155205_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Penny.NetCore.Api.Models.Acesso", b =>
                {
                    b.Property<int>("AcessoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Senha");

                    b.Property<int>("Tipo");

                    b.HasKey("AcessoId");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.CarrinhoCompra", b =>
                {
                    b.Property<int>("CarrinhoCompraId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataCarrinho");

                    b.HasKey("CarrinhoCompraId");

                    b.HasIndex("ClienteId");

                    b.ToTable("CarrinhoCompras");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Compra", b =>
                {
                    b.Property<int>("CompraId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrinhoCompraId");

                    b.Property<DateTime>("DataCompra");

                    b.Property<int?>("EstabelecimentoUsuarioId");

                    b.Property<int?>("UnidadeUsuarioId");

                    b.Property<decimal>("ValorTotal");

                    b.HasKey("CompraId");

                    b.HasIndex("CarrinhoCompraId");

                    b.HasIndex("EstabelecimentoUsuarioId");

                    b.HasIndex("UnidadeUsuarioId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<int>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<int>("Estado");

                    b.Property<string>("Logradouro");

                    b.Property<int>("Numero");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarrinhoCompraId");

                    b.Property<decimal>("CashBack");

                    b.Property<int>("CodigoBarra");

                    b.Property<int?>("CompraId");

                    b.Property<string>("Descricao");

                    b.Property<int>("EstabelecimentoId");

                    b.Property<byte[]>("Foto");

                    b.Property<string>("Nome");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CarrinhoCompraId");

                    b.HasIndex("CompraId");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcessoId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("EnderecoId");

                    b.Property<byte[]>("Foto");

                    b.Property<string>("Nome");

                    b.HasKey("UsuarioId");

                    b.HasIndex("AcessoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Cliente", b =>
                {
                    b.HasBaseType("Penny.NetCore.Api.Models.Usuario");

                    b.Property<decimal>("CashDisponivel");

                    b.Property<int>("ClienteId");

                    b.Property<int>("Cpf");

                    b.Property<DateTime>("DataNascimento");

                    b.ToTable("Cliente");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Estabelecimento", b =>
                {
                    b.HasBaseType("Penny.NetCore.Api.Models.Usuario");

                    b.Property<int>("Cpnj");

                    b.Property<string>("Descricao");

                    b.Property<int>("UnidadeId");

                    b.Property<int?>("UsuarioId1");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Estabelecimento");

                    b.HasDiscriminator().HasValue("Estabelecimento");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.CarrinhoCompra", b =>
                {
                    b.HasOne("Penny.NetCore.Api.Models.Cliente", "Cliente")
                        .WithMany("CarrinhosCompras")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Compra", b =>
                {
                    b.HasOne("Penny.NetCore.Api.Models.CarrinhoCompra", "CarrinhoCompra")
                        .WithMany()
                        .HasForeignKey("CarrinhoCompraId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Penny.NetCore.Api.Models.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("EstabelecimentoUsuarioId");

                    b.HasOne("Penny.NetCore.Api.Models.Estabelecimento", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeUsuarioId");
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Produto", b =>
                {
                    b.HasOne("Penny.NetCore.Api.Models.CarrinhoCompra")
                        .WithMany("Produtos")
                        .HasForeignKey("CarrinhoCompraId");

                    b.HasOne("Penny.NetCore.Api.Models.Compra")
                        .WithMany("Produtos")
                        .HasForeignKey("CompraId");

                    b.HasOne("Penny.NetCore.Api.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("Produtos")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Usuario", b =>
                {
                    b.HasOne("Penny.NetCore.Api.Models.Acesso", "Acesso")
                        .WithMany()
                        .HasForeignKey("AcessoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Penny.NetCore.Api.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Penny.NetCore.Api.Models.Estabelecimento", b =>
                {
                    b.HasOne("Penny.NetCore.Api.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId1");
                });
#pragma warning restore 612, 618
        }
    }
}
